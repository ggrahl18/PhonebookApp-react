{"version":3,"sources":["components/Persons.js","components/AddPerson.js","components/Filter.js","components/Notifications.js","services/persons.js","App.js","index.js"],"names":["Persons","persons","deletePersons","map","person","key","id","name","number","onClick","AddPerson","props","onSubmit","addPerson","value","newName","onChange","handleNameChange","newNumber","handleNumberChange","type","Filter","Notifications","message","className","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","setPersons","setNewName","setNewNumber","filters","setFilters","setMessage","useEffect","personService","messageWith","setTimeout","showPerson","length","filter","p","toLowerCase","indexOf","event","target","preventDefault","personExists","find","window","confirm","retunedPerson","addedPerson","concat","catch","error","console","log","deletePerson","ReactDOM","render","document","getElementById"],"mappings":"mNAaeA,EAXC,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,cAC1B,OACED,EAAQE,KAAI,SAAAC,GAAM,OAChB,uBAAGC,IAAKD,EAAOE,IACZF,EAAOG,KADV,IACiBH,EAAOI,OACtB,4BAAQC,QAAS,kBAAMP,EAAcE,EAAOE,MAA5C,eCmBOI,EAxBG,SAACC,GACjB,OACE,0BAAMC,SAAUD,EAAME,WACpB,qCAEE,2BACEC,MAAOH,EAAMI,QACbC,SAAUL,EAAMM,oBAGpB,uCAEE,2BACEH,MAAOH,EAAMO,UACbF,SAAUL,EAAMQ,sBAGpB,6BACE,4BAAQC,KAAK,UAAb,UCTOC,EATA,SAACV,GACd,OACE,2BACEG,MAAOH,EAAMG,MACbE,SAAUL,EAAMK,YCQPM,EAZO,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACvB,OAAgB,OAAZA,EACK,KAIP,yBAAKC,UAAWD,EAAQH,MACrBG,EAAQA,U,gBCPTE,EAAU,eAyBD,EAvBA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAClB,OAAOA,EAASC,SAoBL,EAhBA,SAACC,GAEd,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAc5B,EANA,SAACxB,EAAIyB,GAElB,OADgBL,IAAMO,IAAN,UAAaR,EAAb,YAAwBnB,GAAMyB,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAI5B,EAXA,SAACxB,GAEd,OADgBoB,IAAMQ,OAAN,UAAgBT,EAAhB,YAA2BnB,IAC5BsB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCyG5BK,EApHH,WAAO,IAAD,EACcC,mBAAS,IADvB,mBACTnC,EADS,KACAoC,EADA,OAEgBD,mBAAS,IAFzB,mBAERrB,EAFQ,KAECuB,EAFD,OAGoBF,mBAAS,IAH7B,mBAGRlB,EAHQ,KAGGqB,EAHH,OAIgBH,mBAAS,IAJzB,mBAIRI,EAJQ,KAICC,EAJD,OAKgBL,mBAAS,MALzB,mBAKRb,EALQ,KAKCmB,EALD,KAOhBC,qBAAU,WACRC,IAEGhB,MAAK,SAACE,GACLO,EAAWP,QAEd,IAEH,IAYMe,EAAc,SAACtB,GAA6B,IAApBH,EAAmB,uDAAd,UACjCsB,EAAW,CAAEnB,UAASH,SACtB0B,YAAW,WACTJ,EAAW,QACV,MAmDCK,EAAgC,IAAnBP,EAAQQ,OACzB/C,EACAA,EAAQgD,QAAO,SAAAC,GAAC,OAAIA,EAAE3C,KAAK4C,cAAcC,QAAQZ,EAAQW,eAAiB,KAI5E,OACE,6BACE,yCACA,kBAAC,EAAD,CAAe5B,QAASA,IAF1B,UAKE,kBAAC,EAAD,CACET,MAAO0B,EACPxB,SAzEsB,SAACqC,GAC3BZ,EAAWY,EAAMC,OAAOxC,UA2EtB,yCACA,kBAAC,EAAD,CACEG,iBAtFmB,SAACoC,GACxBf,EAAWe,EAAMC,OAAOxC,QAsFpBC,QAASA,EACTI,mBApFqB,SAACkC,GAC1Bd,EAAac,EAAMC,OAAOxC,QAoFtBI,UAAWA,EACXL,UAxDY,SAACwC,GACjBA,EAAME,iBAEN,IAAMC,EAAevD,EAAQwD,MAAK,SAAAP,GAAC,OAAIA,EAAE3C,OAASQ,KAC9CyC,EACgBE,OAAOC,QAAP,UAAkBH,EAAajD,KAA/B,sCAEhBqC,EAAqBY,EAAalD,GAAI,CACpCC,KAAMiD,EAAajD,KACnBC,OAAQU,IACPU,MAAK,SAAAgC,GACNvB,EAAWpC,EAAQE,KAAI,SAAAC,GAAM,OAAIA,EAAOE,KAAOkD,EAAalD,GAAKF,EAASwD,MAC1Ef,EAAY,uBAAD,OAAwBW,EAAajD,OAChD+B,EAAW,IACXC,EAAa,OAIjBK,EAAqB,CACnBrC,KAAMQ,EACNP,OAAQU,IACPU,MAAK,SAAAiC,GACNxB,EAAWpC,EAAQ6D,OAAOD,IAC1BhB,EAAY,SAAD,OAAU9B,IACrBuB,EAAW,IACXC,EAAa,OACZwB,OAAM,SAAAC,GACPC,QAAQC,IAAIF,EAAMnC,SAASC,KAAKkC,OAChCnB,EAAY,GAAD,OAAImB,EAAMnC,SAASC,KAAKkC,MAAxB,KAAkC,eA+B/C,8CACA,kBAAC,EAAD,CACE/D,QAAS8C,EACT7C,cA7EgB,SAACI,GACrB,IAAM6D,EAAelE,EAAQwD,MAAK,SAAAP,GAAC,OAAIA,EAAE5C,KAAOA,KAC9BoD,OAAOC,QAAP,iBAAyBQ,EAAa5D,QAEtDqC,EAAqBtC,GAClBsB,MAAK,SAAAC,GACJQ,EAAWpC,EAAQgD,QAAO,SAAAC,GAAC,OAAIA,EAAE5C,KAAOA,MACxCuC,EAAY,WAAD,OAAYsB,EAAa5D,UACnCwD,OAAM,WACP1B,EAAWpC,EAAQgD,QAAO,SAAAC,GAAC,OAAIA,EAAE5C,KAAOA,MACxCuC,EAAY,GAAD,OAAIsB,EAAa5D,KAAjB,wBAA6C,iB,MC9ClE6D,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.f3e3e5c4.chunk.js","sourcesContent":["import React from 'react'\n\nconst Persons = ({ persons, deletePersons }) => {\n  return (\n    persons.map(person=>\n      <p key={person.id}>\n        {person.name} {person.number} \n        <button onClick={() => deletePersons(person.id)}>delete</button>\n      </p>\n    )\n  )\n}\n\nexport default Persons","import React from 'react'\n\nconst AddPerson = (props) => {\n  return (\n    <form onSubmit={props.addPerson}>\n      <div>\n        Name: \n        <input\n          value={props.newName}\n          onChange={props.handleNameChange}\n        />\n      </div>\n      <div>\n        Number:\n        <input \n          value={props.newNumber}\n          onChange={props.handleNumberChange}          \n        />\n      </div>\n      <div>\n        <button type=\"submit\">Add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default AddPerson","import React from 'react'\n\nconst Filter = (props) => {\n  return (\n    <input\n      value={props.value}\n      onChange={props.onChange}\n    />\n  )\n}\n\nexport default Filter","import React from 'react'\n\nconst Notifications = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className={message.type}>\n      {message.message}\n    </div>\n  )\n}\n\nexport default Notifications","import axios from 'axios'\n// const baseUrl = '/api/persons'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => {\n    return response.data\n  })\n}\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n\n}\n\nexport default { getAll, create, update, remove }","import React, { useState, useEffect } from 'react'\nimport Persons from './components/Persons'\nimport AddPerson from './components/AddPerson'\nimport Filter from './components/Filter'\nimport Notifications from './components/Notifications'\nimport personService from './services/persons'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filters, setFilters ] = useState('')\n  const [ message, setMessage ] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then((data) => {\n        setPersons(data)\n      })\n  }, [])\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }  \n  \n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }  \n\n  const handleFiltersChange = (event) => {\n    setFilters(event.target.value)\n  } \n\n  const messageWith = (message, type='success') => {\n    setMessage({ message, type })\n    setTimeout(() => {\n      setMessage(null)\n    }, 6000)\n  }\n\n  const deletePersons = (id) => {\n    const deletePerson = persons.find(p => p.id === id)\n    const confirmed = window.confirm(`Delete ${deletePerson.name}`)\n    if (confirmed) {\n      personService.remove(id)\n        .then(response => {\n          setPersons(persons.filter(p => p.id !== id))\n          messageWith(`Deleted ${deletePerson.name}`)\n        }).catch(() => {\n          setPersons(persons.filter(p => p.id !== id))\n          messageWith(`${deletePerson.name} was already removed`, 'error')\n        })\n    }\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    const personExists = persons.find(p => p.name === newName)\n    if (personExists) {\n      const confirmed = window.confirm(`${personExists.name} already exists, replace number?`)\n      if (confirmed) {\n        personService.update(personExists.id, {\n          name: personExists.name,\n          number: newNumber\n        }).then(retunedPerson => {\n          setPersons(persons.map(person => person.id !== personExists.id ? person : retunedPerson))\n          messageWith(`Updated number for  ${personExists.name}`)\n          setNewName('')\n          setNewNumber('')\n        })\n      }\n    } else {\n      personService.create({\n        name: newName,\n        number: newNumber   \n      }).then(addedPerson => {\n        setPersons(persons.concat(addedPerson))\n        messageWith(`Added ${newName}`)\n        setNewName('')\n        setNewNumber('')\n      }).catch(error => {\n        console.log(error.response.data.error)\n        messageWith(`${error.response.data.error} `, 'error')\n      })\n    }\n  }\n\n  const showPerson = filters.length === 0 ?\n    persons : \n    persons.filter(p => p.name.toLowerCase().indexOf(filters.toLowerCase()) > 0 )\n\n  // More readable, but filter still doesn't work properly\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notifications message={message} />\n      \n      Filter: \n      <Filter\n        value={filters}\n        onChange={handleFiltersChange}\n      />\n\n      <h3>Add Entry</h3>\n      <AddPerson \n        handleNameChange={handleNameChange}\n        newName={newName}\n        handleNumberChange={handleNumberChange}\n        newNumber={newNumber}\n        addPerson={addPerson}\n      />\n     \n      <h3>Name & Numbers</h3>\n      <Persons \n        persons={showPerson} \n        deletePersons={deletePersons} />\n    </div>\n  )\n}\n\nexport default App  ","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}